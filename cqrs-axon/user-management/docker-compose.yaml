version: '3.9'

# Define services
services:

  # api-gateeway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "2000:2000"
    restart: always
    depends_on:
      - user.cmd-service
      - user.query-service
      - bank.cmd-service
    links:
      - user.cmd-service
      - user.query-service
      - bank.cmd-service
    env_file:
      - .env
    networks:
      - springbankNet

  # user-cmd service
  user.cmd-service:
    build:
      context: ./user.cmd.api
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    restart: always
    depends_on:
      - user.oauth-service
    links:
      - mongodb
      - axon-server
    env_file:
      - .env
    networks:
      - springbankNet

  # user-query service
  user.query-service:
    build:
      context: ./user.query.api
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    restart: always
    depends_on:
      - user.oauth-service
    links:
      - mongodb
      - axon-server
    env_file:
      - .env
    networks:
      - springbankNet

  # bank-cmd service
  bank.cmd-service:
    build:
      context: ../bank-account/bankacc.cmd.api
      dockerfile: Dockerfile
    ports:
      - "9091:9091"
    restart: always
    depends_on:
      - user.oauth-service
    links:
      - mongodb
      - axon-server
      - mysql
    env_file:
      - .env
    networks:
      - springbankNet

  # bank-cmd service
  bank.query-service:
    build:
      context: ../bank-account/bankacc.query.api
      dockerfile: Dockerfile
    ports:
      - "9092:9092"
    restart: always
    depends_on:
      - user.oauth-service
    links:
      - mongodb
      - axon-server
      - mysql
    env_file:
      - .env
    networks:
      - springbankNet

  # user-oauth service
  user.oauth-service:
    build:
      context: ./user.oauth2.0
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    restart: always
    depends_on:
      - mongodb
      - axon-server
    links:
      - mongodb
      - axon-server
    env_file:
      - .env
    networks:
      - springbankNet

  # Mongo DB
  mongodb:
    image: mongo:latest
    container_name: mongo-container
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - ./database/mongodb:/data/db
    healthcheck:
      test: "echo 'db.stats().ok' | mongo localhost:27017/foodorderingdb --quiet"
      start_period: 30s
    networks:
      - springbankNet

  # mysql
  mysql:
    image: mysql:latest
    container_name: mysql-container
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=springbankRootPsw
      - MYSQL_DATABASE=userdb
    volumes:
      - ./database/mysqldb:/var/lib/mysql
    healthcheck:
      test: "mysqladmin ping -u root -p$${MYSQL_ROOT_PASSWORD}"
      start_period: 30s
    networks:
      - springbankNet

  # axon
  axon-server:
    image: axoniq/axonserver:latest
    container_name: axon-server
    restart: unless-stopped
    ports:
      - "8024:8024"
      - "8124:8124"
    networks:
      - springbankNet

# Networks to be created to facilitate communication between containers
networks:
  springbankNet: